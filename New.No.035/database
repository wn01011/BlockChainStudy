계층형 데이터베이스
트리 구조 (부모 자식)
네트워크 데이터 베이스
DBMS : Adabas, GT.M, IMS, MUMPS

네트워크 데이터 베이스
계층형의 단점을 보완
Owner-Member 관계로 데이터 저저ㅏㅇ
계층형과 차이  => 1:1, 1:N, N:M 관계 모두 지원
DBMS : DBTG, EDBS, TOTAL

관계형 vs 비관계형

관계형 => 
테이블이라 불리는 최소 단위로 구성된 데이터 모델
모든 데이터는 테이블에 저장 된다.
테이블은 하나 이상의 열로 구성되어있다. (Column)
DBMS : MySQL, MSSQL, Oracle, MariaDB, DB2, SQLite, Cubrid

관계형 데이터베이스와 달리 유연한 데이터 모델을 이용한다.
Key와 Value형태로 저장되어 키를 사용해 데이터관리 및 접근한다.
DBMS : Redis, Cassandra, MongoDB, HBase 등

관계형 데이터베이스 
Table (= Relation) : 데이터의 세부 목적에 맞게 구조적 목록으로 묶어놓은 영역, 테이블의 이름은 고유해야함
Columns (=Fields = Attribute = 열)
Rows (= Record = Tuple = 행)
Field : 행열 교차지점에있는 단일 값

SQL (Structured Query Language)
대화식 프로그래밍 언어
DDL - 데이터베이스 생성, 수정 삭제 (데이터 베이스 전체를 제어하기 위한 언어)
DML - 테이블 내부의 데이터를 검색 생성 수정 삭제, 데이터베이스 내부의 데이터를 제어하기 위한 언어
DCL - 데이터베이스 내부의 계정이나 권한과 같은 부가적인 보안 기능을 제어하기 위한 언어

연산자
산술 연산자 : +, -, *, /, div
비교 연산자 : =, >, <, >=, <=, <>, <=>, !=
문자열 비교 : like, not like
논리 연산자 : and(&&) or(||) not(!)
범위 연산자 : between A and B, Not between A and between
값 출력 연산자 : in, not in
Null 검색 : is null, is not null

하나의 명령어 끝에는 반드시 세미콜론으로 끝나야함 (use 명령어는 예외)
show 명령어 : 데이터베이스나 테이블 목록 조회
ex) show databases, show tables
use 명령어 : 데이터베이스 선택 명령어, 명령어 끝에 세미콜론을 안적어도 됨
ex) use information_schema

기본 SQL 문법 종류
데이터베이스 정의어(DDL, Data Definition Language)
1. 데이터베이스의 구조를 정의하거나 변경, 삭제하기 위해 사용하는 언어
2. 주로 DB 관리자 또는 설계자가 사용
3. CREATE(개체 생성), ALTER(개체 수정), DROP(개체 삭제), TRUNCATE(개체 초기화)
create database <dbname>, create table <tablename>
create schema `testing` default character set utf8mb4
drop database <dbname>
alter table <tablename> <action> <옵션 값...>
action (add, drop, modify, change, rename)

제약조건 : 데이터의 무결성을 지키기 위해 제한된 조건, 테이블 및 열 레벨에서 적용가능하며, 테이블의 생성이나 구조 변경시에도 적용 할 ㅅ ㅜ있음
1. NOT NULL : null 값 사용 제한된 조건
2. UNIQUE : 테이블 내에서 해당 column의 값이 유일하도록 설정(중복 불가능)
3. PRIMARY KEY(기본 키) : 테이블의 각 행을 고유하게 식별하는 값(UNIQUE + NOT NULL)
4. FOREIGN KEY(외래 키) : 두 테이블의 데이터 간 연결을 설정하고 강제 적용하여 외래키 테이블에 저장될 수 있는 데이터를 제어
5. CHECK : 해당 column에 저장 가능한 데이터 값의 범위나 조건 지정

Table 수정(구조 변경)
1. add : Column 추가
        alter table <table-name> add <column-name> <data-type> [option] [제약조건] [위치옵션];
        위치 옵션 : first (가장 위에 추가), after <컬럼 명> : 해당 컬럼 뒤에 추가

데이터 조작어(DML, Data Manipulation)
1. data를 조작하기 위해 사용하는 언어
2. data의 삽입, 수정, 삭제, 조회 emddml ehdwkrdmf wpdj
3. data를 이용하려는 사용자와 시스템간의 인터페이스를 직접적으로 제공하는 언어
4. 가장 많이 사용됨(공격 시에도 가장 많이 사용)
5. INSERT(데이터 생성), UPDATE(데이터 수정), DELETE(데이터 삭제), SELECT(데이터 조회)

INSERT INTO <table-name> values (data1, data2, ...) : 입력할 데이터는 반드시 컬럼의 순서와 개수가 일치해야 함
INSERT INTO <table-name> (column1, column2, ...) values (data1, data2, ...) : 앞에 입력한 컬럼명과 입력데이터의 순서와 개수가 일치해야함

데이터 제어어(DCL, Data Control Language)
1. DB에 대한 보안 무결성, 복구등 DBMS 를 제어하기 위한 언어
2. GRANT(권한 할당), REVOKE(권한해제), COMMIT(실행), ROLLBACK(복구)

